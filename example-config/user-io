#!/bin/env sh

# ╺┳┓┏━╸┏━┓┏━╸┏┓╻╺┳┓┏━╸┏┓╻┏━╸╻┏━╸┏━┓
#  ┃┃┣╸ ┣━┛┣╸ ┃┗┫ ┃┃┣╸ ┃┗┫┃  ┃┣╸ ┗━┓
# ╺┻┛┗━╸╹  ┗━╸╹ ╹╺┻┛┗━╸╹ ╹┗━╸╹┗━╸┗━┛
# Dependencies

# The current configuration wires together alsnip and:
#
#    lemonbar  sxiv  dmenu  fzf  alacritty
#
# and considers that lemonbar has been initialized using
# touch /tmp/lemonbar && tail -F /tmp/lemonbar | lemonbar


parse_colors_for_lemonbar() {

  # shellcheck disable=SC2016
  ssgb_awk='
  BEGIN { printf("%s", "%{c}  "); }
  NR % 2 == 1 { printf("%s", $0); }
  NR % 2 == 0 {
  if      ($0 == "normal")    printf("%s", "%{F-}");
  else if ($0 == "newline")   printf("%s", "%{B#234}$%{B-}");
  else if ($0 == "secondary") printf("%s", "%{F#398}");
  else if ($0 == "attention") printf("%s", "%{F#fa2}");
  else if ($0 == "pale")      printf("%s", "%{F#567}");
  else if ($0 == "selection") printf("%s", "%{R}");
  else                        printf("%s", "%{F-}");
  }
  END { printf("%{F-}  \n"); }
  '

  awk "$ssgb_awk"
}

use_lemonbar() {
  {
    printf "%s" "$1"
    parse_colors_for_lemonbar
  } | awk '{print $0}' >> /tmp/lemonbar  # awk buffers the line
}

main() {
  case "$1" in
    say-bar) use_lemonbar "$2" ;;
    print-terminal-wrapper) printf 'alacritty -e\n' ;;
    execute)  # you can be more creative here. I also store the
      mkdir -p /tmp/al  # scripts in a history file.
      stdout="$(mktemp /tmp/al/stdout-"$(basename "$0")"-XXXX)"
      stderr="$(mktemp /tmp/al/stderr-"$(basename "$0")"-XXXX)"
      sh -c "$1" 1> "$stdout" 2> "$stderr"
      echo "===" | cat "$stdout" - "$stderr" | alacritty -e less
      rm "$stdout" "$stderr"
      ;;

    ls) xargs ls | dmenu -i ;;
    recommend) cat | dmenu -i ;;
    demand) cat | dmenu -i ;;
    get-image) xargs sxiv -t -o ;;
    get-image-piped) sh | xargs sxiv -t -o ;;
    get-image-in) read -r dir; sxiv -t -o "$dir" | sed "s|$dir/||" ;;
    get-line) : | dmenu -p "$2" ;;
    command) sh | dmenu -i ;;
    manip)
      read -r manipulation
      sh | dmenu -i -p "$1" | sh -c "$manipulation"
      ;;
    preview)
      read -r previewer
      # shellcheck disable=SC2016
      cmd='fzf --preview="$0" --border --border-label=" $1 " < "$2" > "$3"'
      i="$(mktemp /tmp/alsnip-preview-i-XXXXXX)"
      o="$(mktemp /tmp/alsnip-preview-o-XXXXXX)"
      cat > "$i"
      alacritty -e sh -c "$cmd" "$previewer" "$2" "$i" "$o"
      cat "$o"
      rm "$i" "$o"
      ;;
    *) printf "Invalid / unimplemented: '%s'\n" "$1" | dmenu -p "Error" ;;
  esac
}

main "$@"

